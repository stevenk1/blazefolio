@using MediatR
@using BlazeFolio.Application.Wallets.Features.Queries
@using BlazeFolio.Services
@using System.Linq

<MudTable Items="@Wallets" Hover="true" Elevation="0" Loading="@Loading">
    <HeaderContent>
        <MudTh>Name</MudTh>
        <MudTh>Actions</MudTh>
    </HeaderContent>
    <RowTemplate Context="wallet">
        <MudTd>@wallet.Name</MudTd>
        <MudTd>
            <MudIconButton Icon="@Icons.Material.Filled.ShoppingCart" 
                          Size="Size.Small" 
                          Color="Color.Success" 
                          Rounded="true" 
                          OnClick="@(() => OnBuyStocks.InvokeAsync(wallet))"
                          Title="Buy Stocks"/>
            <MudIconButton Icon="@Icons.Material.Filled.Edit" Size="Size.Small" Rounded="true"/>
            <MudIconButton Icon="@Icons.Material.Filled.DeleteForever" Size="Size.Small" Color="Color.Error" Rounded="true" OnClick="@(() => OnDeleteWallet.InvokeAsync(wallet))"/>
        </MudTd>
    </RowTemplate>
    <NoRecordsContent>
        <div class="d-flex flex-column align-center justify-center py-4">
            <MudIcon Icon="@Icons.Material.Filled.Wallet" Size="Size.Large" Color="Color.Secondary"
                     Class="mb-3"/>
            <MudText Class="mb-3">No wallets found. Add your first wallet to get started.</MudText>
            <MudButton Color="Color.Primary" 
                      Variant="Variant.Filled" 
                      StartIcon="@Icons.Material.Filled.Add" 
                      Size="Size.Medium" 
                      Rounded="true"
                      OnClick="@OnAddWallet">
                Add Wallet
            </MudButton>
        </div>
    </NoRecordsContent>
</MudTable>

@code {
    [Parameter]
    public List<WalletDisplay> Wallets { get; set; } = new();
    
    [Parameter]
    public bool Loading { get; set; }
    
    [Parameter]
    public EventCallback OnAddWallet { get; set; }
    
    [Parameter]
    public EventCallback<WalletDisplay> OnDeleteWallet { get; set; }
    
    [Parameter]
    public EventCallback<WalletDisplay> OnBuyStocks { get; set; }
    
    public class WalletDisplay
    {
        public Guid Id { get; set; }
        public string Name { get; set; } = string.Empty;
        public decimal Balance { get; set; }
    }
}
